Given an array arr containing N integers and a positive integer K, find the length of the longest sub array with sum of the elements divisible by the given value K.

Example 1:
Input:
N = 6, K = 3
arr[] = {2, 7, 6, 1, 4, 5}
Output: 
4
Explanation:
The subarray is {7, 6, 1, 4} with sum 18, which is divisible by 3.

Input:
N = 7, K = 3
arr[] = {-2, 2, -5, 12, -11, -1, 7}
Output: 
5
Explanation:
The subarray is {2,-5,12,-11,-1} with sum -3, which is divisible by 3.

solution
class Solution{
public:	
	int longSubarrWthSumDivByK(int arr[], int n, int k)
	{
	    // Complete the function'
	    int ans=0,sum=0;
	    unordered_map<int,int>mp;
	    for(int i=0;i<n;i++){
	        sum+=arr[i];
	        int rem=sum%k;
	        if(rem<0){
	            rem+=k;
	        }
	        if(rem==0){
	            ans=i+1;
	        }else{
	            if(mp[rem]){
	                ans=max(ans,i+1-mp[rem]);
	            }else{
	                mp[rem]=i+1;
	            }
	        }
	    }
	    return ans;
	}
};
